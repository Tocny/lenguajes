;;(interp (parse '{with ([x 2] [y 3]) (* x (- y))}))
;-6
;;(interp (parse '{with ([x 2] [y 3]) ( + x y)}))
;5
(parse '{with ([x 2] [y 3]) ( + x y)})
;(with (list (binding 'x (num 2)) (binding 'y (num 3))) (op #<procedure:+> (list (id 'x) (id 'y))))
(parse '{with ([x 2] [y 3]) ( + x y)})
;(with (list (binding 'x (num 2)) (binding 'y (num 3))) (op #<procedure:+> (list (id 'x) (id 'y))))
(parse 'x)
;(id 'x)
(parse '2)
;(num 2)
(subst (id 'x) 'x (num 5))
;(num 5)
(subst (parse 'y) 'x (parse '5))
;(id 'y)
(subst (parse '(+ x 2)) 'x (parse '5))
;(op #<procedure:+> (list (num 5) (num 2)))
(subst (parse '(+ x x x)) 'x (parse '3))
;(op #<procedure:+> (list (num 3) (num 3) (num 3)))
;;(interp (parse '{with ([x 2] [y 1] [z 3]) (+ x y z)}))
;6
;;(interp (parse '{with ([x 2] [y 1] [z 3]) (/ x y z)}))
;2/3
;;(interp (parse '{with ([x 2] [y 1] [z 3]) (* x y z)}))
;6
;;(interp (parse '{with ([x 2] [y 1] [z 3]) (- x y z)}))
;-2
;;(interp (parse '{with* ([x 2] [y x]) ( + x y)}))
;4
